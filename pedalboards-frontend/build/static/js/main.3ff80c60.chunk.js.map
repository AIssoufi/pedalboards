{"version":3,"sources":["services/pedalboards.service.js","components/presentationals/header/index.js","components/presentationals/pagination/index.jsx","components/presentationals/pedalboard-details/index.jsx","components/presentationals/plugin/index.jsx","components/presentationals/search/index.jsx","components/containers/plugins/index.jsx","components/containers/pedalboard-details/index.jsx","components/App.js","serviceWorker.js","index.js"],"names":["pedalboards_service","PedalboardsService","Object","classCallCheck","this","url","header","Content-Type","page","pagesize","URL","concat","searchParams","append","fetch","then","response","json","URLSearchParams","_iterator","entries","Symbol","iterator","_iteratorNormalCompletion","_step","next","done","pair","value","console","log","reponse","id","data","method","body","Header","react_default","a","createElement","className","Link","to","NavLink","activeClassName","index_es","icon","faThList","process","target","faUser","Component","Pagination","currentPage","result","i","push","elementCount","_this","props","onClick","onCurrentPageChange","faAngleLeft","getLeftPageNumbers","map","pageNumber","type","key","getRightPageNumbers","faAngleRight","PedalboardDetails","author","name","href","uri","rel","pedalboardCount","label","src","screenshotUrl","alt","categories","categorie","index","pathname","search","dangerouslySetInnerHTML","__html","description","controlPorts","controlPort","default","min","max","version","Plugin","_id","react_tippy","title","position","category","brand","Search","possibleConstructorReturn","getPrototypeOf","call","handleFormSubmit","event","preventDefault","formNode","fromRef","current","formData","FormData","onSubmit","createRef","ref","placeholder","onChange","_","debounce","faSearch","htmlFor","defaultValue","PluginsPage","handleSearchSubmit","get","findPlugins","state","displayNumber","setState","plugins","count","countPlugins","numberPages","catch","error","setCurrentPage","isNaN","getPlugins","_this2","location","prevProps","prevState","_this3","search_Search","pagination_Pagination","length","plugin","presentationals_plugin","assign","PedalboardDetailsPage","getPlugin","match","params","pedalboard_details","App","BrowserRouter","react","header_Header","Switch","Route","exact","path","component","Plugins","Redirect","Boolean","window","hostname","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3ff80c60.chunk.js","sourcesContent":["class PedalboardsService {\n  constructor() {\n    this.url = \"http://localhost:8080\";\n    this.header = {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n    }\n  }\n\n  async getPlugins(page = 1, pagesize = 10) {\n    const url = new URL(`${this.url}/api/plugins`);\n    url.searchParams.append(\"page\", page);\n    url.searchParams.append(\"pagesize\", pagesize);\n\n    return fetch(url).then(response => response.json());\n  }\n\n  async findPlugins(searchParams, page = 1, pagesize = 10) {\n    const url = new URL(`${this.url}/api/plugins`);\n    url.searchParams.append(\"page\", page);\n    url.searchParams.append(\"pagesize\", pagesize);\n\n    if (searchParams instanceof URLSearchParams) {\n      for (let pair of searchParams.entries()) {\n        console.log(pair);\n        url.searchParams.append(`filterby[${pair[0]}]`, pair[1]);\n      }\n    }\n\n    // for (let params of url.searchParams.entries()) {\n    //   console.log(params);\n    // }\n    return fetch(url).then(response => response.json())\n      .then(reponse => {\n        console.log(reponse);\n        return reponse;\n      });\n  }\n\n  async getPlugin(id) {\n    return fetch(`${this.url}/api/plugin/${id}`)\n      .then(response => response.json());\n  }\n\n  async updatePlugin(id, data) {\n    return fetch(`${this.url}/api/plugin/${id}`, {\n      method: \"PUT\",\n      header: this.header,\n      body: data\n    }).then(response => response.json());\n  }\n\n  async createPlugin(data) {\n    return fetch(`${this.url}/api/plugin`, {\n      method: \"POST\",\n      header: this.header,\n      body: data\n    }).then(response => response.json());\n  }\n\n  async deletePlugin(id) {\n    return fetch(`${this.url}/api/plugin/${id}`, {\n      method: \"DELETE\"\n    }).then(response => response.json());\n  }\n}\n\nexport default new PedalboardsService();","// Components\nimport React, { Component } from 'react';\nimport { NavLink, Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser, faThList } from '@fortawesome/free-solid-svg-icons';\n\n// CSS\nimport './style.scss';\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <nav className=\"toolbar whiteframe\">\n        <div className=\"toolbar-content\">\n          <Link to=\"/\" className=\"mobile-menu-button\">\n            <span className=\"icon-bar\"></span>\n            <span className=\"icon-bar\"></span>\n            <span className=\"icon-bar\"></span>\n          </Link>\n          <div className=\"toolbar-brand-container\">\n            <div className=\"toolbar-brand\">\n              <Link className=\"logo\" to=\"/\">\n                Projet MBDS\n              </Link>\n            </div>\n          </div>\n          <div className=\"toolbar-option-container\">\n            <NavLink\n              className=\"toolbar-option\"\n              activeClassName=\"active\"\n              to=\"/plugins\">\n              <FontAwesomeIcon icon={faThList} />\n              <span>Plugins</span>\n            </NavLink>\n            <NavLink\n              className=\"toolbar-option\"\n              to={process.env.REACT_APP_BACKEND + \"/login\"}\n              target=\"_blank\">\n              <FontAwesomeIcon icon={faUser} />\n              <span>Log In</span>\n            </NavLink>\n\n          </div>\n        </div>\n      </nav>\n    )\n  }\n}","// Dependencies\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleLeft, faAngleRight } from '@fortawesome/free-solid-svg-icons';\n\n// CSS\nimport './style.scss';\n\nexport default class Pagination extends Component {\n  static propTypes = {\n    currentPage: PropTypes.number.isRequired,\n    elementCount: PropTypes.number.isRequired,\n    onCurrentPageChange: PropTypes.func.isRequired\n  }\n\n  getLeftPageNumbers(currentPage) {\n    const result = [];\n    if (currentPage <= 4) {\n      for (let i = 1; i < currentPage; i++) {\n        result.push(i);\n      }\n    } else {\n      result.push(1);\n      result.push('...');\n      result.push(currentPage - 1);\n    }\n    return result;\n  }\n\n  getRightPageNumbers(currentPage, elementCount) {\n    const result = [];\n\n    if (currentPage === elementCount) { return result; }\n    result.push(currentPage + 1);\n    if (currentPage + 1 === elementCount) { return result; }\n    if (currentPage + 1 === 2) {\n      result.push(currentPage + 2);\n      if (currentPage + 3 !== elementCount) {\n        result.push('...');\n      }\n    } else if (currentPage + 1 !== elementCount && currentPage + 2 !== elementCount) {\n      result.push('...');\n    }\n    result.push(elementCount);\n    return result;\n  }\n\n  render() {\n    if (!this.props.elementCount || this.props.elementCount <= 0) return null;\n    return (\n      <div className=\"navigation\">\n        <div\n          className=\"page-precedente\"\n          onClick={() => this.props.onCurrentPageChange(this.props.currentPage - 1)}>\n          <FontAwesomeIcon icon={faAngleLeft} />\n          <p>Page pérécedente</p>\n        </div>\n        <div className=\"numero-de-page\">\n          {this.getLeftPageNumbers(this.props.currentPage)\n            .map(pageNumber => <button\n              type=\"button\"\n              key={pageNumber}\n              onClick={() => this.props.onCurrentPageChange(pageNumber)}>{pageNumber}</button>)}\n          <button type=\"button\" className=\"current-page\">{this.props.currentPage}</button>\n          {this.getRightPageNumbers(\n            this.props.currentPage,\n            this.props.elementCount\n          ).map(pageNumber => <button\n            type=\"button\"\n            key={pageNumber}\n            onClick={() => this.props.onCurrentPageChange(pageNumber)}>{pageNumber}</button>)}\n        </div>\n        <div\n          className=\"page-suivante\"\n          onClick={() => this.props.onCurrentPageChange(this.props.currentPage + 1)}>\n          <p>Page suivante</p>\n          <FontAwesomeIcon icon={faAngleRight} />\n        </div>\n      </div>);\n  }\n}\n","// Dependencies\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\n// CSS\nimport \"./style.scss\";\n\nconst PedalboardDetails = props => (\n  <div className=\"pedalboard\">\n    <header>\n      <div className=\"author\">\n        <span className=\"author-name\"> {props.author.name}</span>\n        <a href={props.uri} target=\"_blank\" rel=\"noopener noreferrer\">{props.uri}</a>\n      </div>\n      {props.pedalboardCount ?\n        <div className=\"count-container\">\n          <a className=\"count\" href=\"#null\">\n            <span>{props.pedalboardCount}</span>\n          </a>\n          <span className=\"pedalboard-count-text\">Pedalboards using it</span>\n        </div> :\n        null}\n    </header>\n    <h2>{props.label}</h2>\n    <div className=\"plugin-media-container\">\n      <img className=\"plugin-media\" src={props.screenshotUrl} alt=\"Plugin screenshot\" />\n    </div>\n    <div className=\"category-container\">{\n      props.categories.map((categorie, index) => <Link\n        to={{\n          pathname: '/plugins',\n          search: `?categories=${categorie}`\n        }}\n        key={index}\n        className=\"plugin-category\">{categorie}</Link>)\n    }\n    </div>\n    <p className=\"pedalboard-description\" dangerouslySetInnerHTML={{ __html: props.description }} />\n\n    <div className=\"plugin-control-ports\">\n      <table>\n        <thead>\n          <tr>\n            <th>Control</th>\n            <th>Default</th>\n            <th>Min</th>\n            <th>Max</th>\n          </tr>\n        </thead>\n        <tbody>\n          {\n            props.controlPorts.map((controlPort, index) => (\n              <tr key={index}>\n                <td>{controlPort.name}</td>\n                <td>{controlPort.default}</td>\n                <td>{controlPort.min}</td>\n                <td>{controlPort.max}</td>\n              </tr>\n            ))\n          }\n        </tbody>\n      </table>\n    </div>\n\n    <div className=\"plugin-misc-info-container\">\n      <span className=\"plugin-uri\">{props.uri}</span>\n      <span className=\"plugin-version\">v{props.version}</span>\n    </div>\n  </div>\n);\n\nPedalboardDetails.propTypes = {\n  author: PropTypes.shape({\n    name: PropTypes.string\n  }),\n  categories: PropTypes.arrayOf(PropTypes.string),\n  controlPorts: PropTypes.arrayOf(PropTypes.shape({\n    default: PropTypes.number,\n    max: PropTypes.number,\n    min: PropTypes.number,\n    name: PropTypes.string\n  })),\n  description: PropTypes.string,\n  label: PropTypes.string,\n  pedalboardCount: PropTypes.number,\n  screenshotUrl: PropTypes.string,\n  uri: PropTypes.string\n}\n\nexport default PedalboardDetails;\n","// Dependencies\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Tooltip } from 'react-tippy';\n\n// CSS\nimport './style.scss';\nimport 'react-tippy/dist/tippy.css';\n\nconst Plugin = props => (\n  <div className=\"plugin\">\n    <Link to={`/plugin/${props._id}`}>\n      <Tooltip\n        title={`<i>Click to discover<br>more details about ${props.name}.</i>`}\n        position=\"bottom\">\n        <img\n          src={props.screenshotUrl}\n          alt=\"Plugin screenshot\"\n        />\n      </Tooltip>\n    </Link>\n    <div className=\"category-container\">\n      {props.categories.map(category => <Tooltip\n        key={category}\n        title={`<b>Categorie</b><br><i>Click to filter plugin<br>by <b>${category}</b> categories.</i>`}\n        position=\"top\"><Link\n\n          to={{\n            pathname: '/plugins',\n            search: `?categories=${category}`\n          }}\n          className=\"category\">{category}</Link></Tooltip>)}\n    </div>\n    <hr />\n    <div className=\"info-container\">\n      <Tooltip\n        title={`<b>Label</b><br><i>Click to filter plugin<br>by ${props.label} labels.</i>`}\n        position=\"top\">\n        <Link\n          to={{\n            pathname: '/plugins',\n            search: `?label=${props.label}`\n          }}\n          className=\"info\">{props.label}</Link>\n      </Tooltip>\n      <Tooltip\n        title={`<b>Brand</b><br><i>Click to filter plugin<br>by ${props.brand} brands.</i>`}\n        position=\"bottom\">\n        <Link\n          to={{\n            pathname: '/plugins',\n            search: `?brand=${props.brand}`\n          }}\n          className=\"info brand\">{props.brand}</Link>\n      </Tooltip>\n    </div>\n  </div>\n);\n\nPlugin.propTypes = {\n  _id: PropTypes.string.isRequired,\n  author: PropTypes.shape({\n    avatarUrl: PropTypes.string,\n    name: PropTypes.string\n  }),\n  brand: PropTypes.string,\n  categories: PropTypes.arrayOf(PropTypes.string),\n  controlPorts: PropTypes.arrayOf(PropTypes.shape({\n    default: PropTypes.number,\n    max: PropTypes.number,\n    min: PropTypes.number,\n    name: PropTypes.string\n  })),\n  description: PropTypes.string,\n  imageHeight: PropTypes.number,\n  imageWidth: PropTypes.number,\n  label: PropTypes.string,\n  name: PropTypes.string,\n  pedalboardCount: PropTypes.number,\n  screenshotUrl: PropTypes.string,\n  stable: PropTypes.bool,\n  thumbnailUrl: PropTypes.string,\n  uri: PropTypes.string\n}\n\nexport default Plugin;","// Dependencies\nimport React, { Component, createRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport { Tooltip } from 'react-tippy';\nimport _ from 'lodash';\n\n// CSS\nimport './style.scss';\nimport 'react-tippy/dist/tippy.css';\n\nexport default class Search extends Component {\n  constructor(props) {\n    super(props);\n    this.fromRef = createRef();\n  }\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired\n  }\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    const formNode = this.fromRef.current;\n    const formData = new FormData(formNode);\n\n    this.props.onSubmit(formData);\n  }\n\n  render() {\n    return (\n      <form\n        className=\"search-container\"\n        onSubmit={this.handleFormSubmit}\n        ref={this.fromRef}>\n        <div className=\"search\">\n          <input\n            type=\"text\"\n            name=\"value\"\n            placeholder=\"Search Plugins\"\n            onChange={_.debounce(this.handleFormSubmit, 900)} />\n          <Tooltip\n            title={`<i>Click to launch the search</i>`}\n            position=\"top\">\n            <button type=\"submit\"><FontAwesomeIcon icon={faSearch} /></button>\n          </Tooltip>\n        </div>\n        <div className=\"filter\">\n          <label htmlFor=\"options\">in</label>\n          <Tooltip\n            title={`<i>Choose a search filter</i>`}\n            position=\"bottom\">\n            <select id=\"options\" name=\"label\" defaultValue=\"brand\" onChange={this.handleFormSubmit}>\n              <option value=\"brand\">brand</option>\n              <option value=\"categories\">categorie</option>\n              <option value=\"label\">lebel</option>\n            </select>\n          </Tooltip>\n        </div>\n\n      </form>\n    );\n  }\n}","// Dependencies\nimport React, { Component } from 'react';\n\n// CSS\nimport \"./style.scss\";\n\n// Services\nimport PedalboardsService from 'services/pedalboards.service';\n\n// Componenets\nimport {\n  Plugin,\n  Search,\n  Pagination\n} from 'components/presentationals';\n\nclass PluginsPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      plugins: [],\n      elementCount: 0,\n      displayNumber: 10,\n      currentPage: 1,\n      countPlugins: -1\n    }\n  }\n\n  componentDidMount() {\n    ((this.props.location && this.props.location.search) ?\n      PedalboardsService.findPlugins(\n        new URLSearchParams(this.props.location.search),\n        this.state.currentPage,\n        this.state.displayNumber\n      ) : PedalboardsService.getPlugins(\n        this.state.currentPage,\n        this.state.displayNumber\n      )).then(response => {\n        this.setState({\n          plugins: response.data,\n          elementCount: response.count,\n          countPlugins: response.numberPages\n        });\n      })\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.location && prevProps.location && this.props.location.search !== prevProps.location.search) {\n      PedalboardsService.findPlugins(\n        new URLSearchParams(this.props.location.search),\n        this.state.currentPage,\n        this.state.displayNumber\n      ).then(response => {\n        this.setState({\n          plugins: response.data,\n          elementCount: response.count,\n          countPlugins: response.numberPages\n        });\n      }).catch(error => console.log(error));\n    }\n  }\n\n  handleSearchSubmit = formData => {\n    const label = formData.get('label');\n    const value = formData.get('value');\n    const searchParams = new URLSearchParams();\n\n    searchParams.append(label, value);\n    PedalboardsService.findPlugins(\n      searchParams,\n      this.state.currentPage,\n      this.state.displayNumber\n    ).then(response => {\n      this.setState({\n        plugins: response.data,\n        elementCount: response.count,\n        countPlugins: response.numberPages\n      });\n    }).catch(error => console.log(error));\n  }\n\n  setCurrentPage = (pageNumber) => {\n    if (isNaN(pageNumber) || pageNumber >= this.state.elementCount || pageNumber <= 0) return;\n\n    PedalboardsService.getPlugins(\n      pageNumber,\n      this.state.displayNumber\n    ).then(response => {\n      this.setState({\n        plugins: response.data,\n        elementCount: response.count,\n        currentPage: response.currentPage,\n        countPlugins: response.numberPages\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"plugins-page-container\">\n        <header>\n          <h2>Plugins</h2>\n          <p>Here be plugins</p>\n          <hr />\n        </header>\n        <Search onChange={null} onSubmit={this.handleSearchSubmit} />\n        <Pagination\n          currentPage={this.state.currentPage}\n          elementCount={this.state.countPlugins}\n          onCurrentPageChange={this.setCurrentPage}\n        />\n        <div className=\"plugin-container\">\n          {this.state.plugins && this.state.plugins.length > 0 ?\n            this.state.plugins.map(plugin => <Plugin key={plugin._id} {...plugin} />) :\n            <p>Aucun plugin ne correspond à votre recherche !</p>}\n        </div>\n        <Pagination\n          currentPage={this.state.currentPage}\n          elementCount={this.state.countPlugins}\n          onCurrentPageChange={this.setCurrentPage}\n        />\n      </div>\n    );\n  }\n\n};\n\nexport default PluginsPage;","// Dependencies\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Components\nimport { PedalboardDetails } from 'components/presentationals';\n\n// Services\nimport PedalboardsService from 'services/pedalboards.service';\n\n// CSS\nimport \"./style.scss\";\n\nclass PedalboardDetailsPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      plugin: null\n    }\n  }\n  componentDidMount() {\n    PedalboardsService.getPlugin(this.props.match.params.id)\n      .then(response => this.setState({\n        plugin: response.data\n      }));\n  }\n  render() {\n    return (\n      <div className=\"pedalboard-details-container\">\n        {this.state.plugin ? <PedalboardDetails {...this.state.plugin} /> : <p>Pas de données disponible</p>}\n      </div>\n    );\n  }\n}\n\n\n\n\n\nPedalboardDetailsPage.propTypes = {\n  location: PropTypes.shape({\n    state: PropTypes.shape({\n      payload: PropTypes.object.isRequired\n    })\n  })\n}\n\nexport default PedalboardDetailsPage;\n","// Dependencies\nimport React, { Component, Fragment } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\n\n// CSS\nimport './App.css';\n\n// Components\nimport {\n  Plugins,\n  PedalboardDetails\n} from 'components/containers';\nimport {\n  Header\n} from 'components/presentationals'\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <Fragment>\n          <Header />\n          <main className=\"main-container\">\n            <Switch>\n              <Route exact path=\"/plugins\" component={Plugins} />\n              <Route exact path=\"/plugin/:id\" component={PedalboardDetails} />\n              <Redirect to=\"/plugins\" />\n            </Switch>\n          </main>\n        </Fragment>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// Dependencies\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n// CSS\nimport './index.scss';\n\n// Components\nimport App from 'components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}